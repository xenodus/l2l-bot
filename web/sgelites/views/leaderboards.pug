extends layout

block header
  script(src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.js")
  script(src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js")
  script(src="https://cdn.datatables.net/fixedheader/3.1.5/js/dataTables.fixedHeader.min.js")

  link(rel='stylesheet', href='https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css')
  link(rel='stylesheet', href='https://cdn.datatables.net/fixedheader/3.1.5/css/fixedHeader.bootstrap4.min.css')

  script(src="/javascripts/leaderboard.js?79")
block content
  .row
    .col-md-12.pt-4.pb-4
      ul.nav.nav-pills#pills-tab(role="tablist").mb-5.leaderboard-nav.justify-content-end
        li.nav-item
          a.nav-link.active#pills-summary-tab(data-toggle="pill", href="#pills-summary", role="tab" aria-controls="pills-summary" aria-selected="true").text-white Summary
        li.nav-item
          a.nav-link#pills-raid-tab(data-toggle="pill", href="#pills-raid", role="tab" aria-controls="pills-raid" aria-selected="true").text-white Raid
        li.nav-item
          a.nav-link#pills-pve-tab(data-toggle="pill", href="#pills-pve", role="tab" aria-controls="pills-pve" aria-selected="true").text-white PvE
        li.nav-item
          a.nav-link#pills-pvp-tab(data-toggle="pill", href="#pills-pvp", role="tab" aria-controls="pills-pvp" aria-selected="true").text-white PvP
        li.nav-item
          a.nav-link#pills-weapon-tab(data-toggle="pill", href="#pills-weapon", role="tab" aria-controls="pills-weapon" aria-selected="true").text-white Weapons Kills
        li.nav-item
          a.nav-link#pills-triumph-tab(data-toggle="pill", href="#pills-triumph", role="tab" aria-controls="pills-triumph" aria-selected="true").text-white Triumph

      .tab-content#pills-tabContent
        .tab-pane.fade.show.active#pills-summary
          h2.text-center.mb-3 Summary
          #badges-container.mb-5.mt-2

        .tab-pane.fade#pills-raid(role="tabpanel", aria-labelledby="pills-raid-tab")
          h2.text-center Raid Completions
          #raid-container.mb-5

        .tab-pane.fade#pills-pve(role="tabpanel", aria-labelledby="pills-pve-tab")
          h2.text-center PvE Stats
          #pve-container.mb-5

        .tab-pane.fade#pills-pvp(role="tabpanel", aria-labelledby="pills-pvp-tab")
          h2.text-center PvP Stats
          #pvp-container.mb-5

        .tab-pane.fade#pills-weapon(role="tabpanel", aria-labelledby="pills-weapon-tab")
          h2.text-center Weapon Kills
          #weapon-container.mb-5

        .tab-pane.fade#pills-triumph(role="tabpanel", aria-labelledby="pills-triumph-tab")
          h2.text-center Triumph
          #triumph-container.mb-5

block footer
  link(rel='stylesheet', href='/stylesheets/leaderboard.css?33')

  script.
    $(document).ready(function(){

      let data = !{JSON.stringify(data)};

      // Badges
      $("#badges-container").html( badges(data) );

      // Raid Stats
      $("#raid-container").html( raidDataTable(data) );
      $("#raid_table").addClass("bg-white text-dark");
      let raid_table = $("#raid_table").DataTable({
        paging: true,
        pageLength: 50,
        fixedHeader: false,
        "columnDefs": [ {
            "searchable": false,
            "orderable": false,
            "targets": 0
        } ],
        "order": [[ 13, 'desc' ]]
      });

      raid_table.on( 'order.dt search.dt', function () {
          raid_table.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
              cell.innerHTML = i+1;
          } );
      } ).draw();

      // PvE Stats
      $("#pve-container").html( pveDataTable(data) );
      $("#pve_table").addClass("bg-white text-dark");
      let pve_table = $("#pve_table").DataTable({
        paging: true,
        pageLength: 50,
        fixedHeader: false,
        "columnDefs": [ {
            "searchable": false,
            "orderable": false,
            "targets": 0
        } ],
        "order": [[ 1, 'asc' ]]
      });

      pve_table.on( 'order.dt search.dt', function () {
          pve_table.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
              cell.innerHTML = i+1;
          } );
      } ).draw();

      // PvP Stats
      $("#pvp-container").html( pvpDataTable(data) );
      $("#pvp_table").addClass("bg-white text-dark");
      let pvp_table = $("#pvp_table").DataTable({
        paging: true,
        pageLength: 50,
        fixedHeader: false,
        "columnDefs": [ {
            "searchable": false,
            "orderable": false,
            "targets": 0
        } ],
        "order": [[ 7, 'desc' ]]
      });

      pvp_table.on( 'order.dt search.dt', function () {
          pvp_table.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
              cell.innerHTML = i+1;
          } );
      } ).draw();

      // Weapon Stats
      $("#weapon-container").html( weaponDataTable(data) );
      $("#weapon_table").addClass("bg-white text-dark");
      let weapon_table = $("#weapon_table").DataTable({
        paging: true,
        pageLength: 50,
        fixedHeader: false,
        "columnDefs": [ {
            "searchable": false,
            "orderable": false,
            "targets": 0
        } ],
        "order": [[ 1, 'asc' ]]
      });

      weapon_table.on( 'order.dt search.dt', function () {
          weapon_table.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
              cell.innerHTML = i+1;
          } );
      } ).draw();

      // Triumph
      $("#triumph-container").html( triumphDataTable(data) );
      $("#triumph_table").addClass("bg-white text-dark");
      let triumph_table = $("#triumph_table").DataTable({
        paging: true,
        pageLength: 50,
        fixedHeader: false,
        "columnDefs": [ {
            "searchable": false,
            "orderable": false,
            "targets": 0
        } ],
        "order": [[ 3, 'desc' ]]
      });

      triumph_table.on( 'order.dt search.dt', function () {
          triumph_table.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {
              cell.innerHTML = i+1;
          } );
      } ).draw();
    });